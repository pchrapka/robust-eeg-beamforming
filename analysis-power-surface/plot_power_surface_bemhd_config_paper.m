function plot_power_surface_bemhd_config_paper(sim_file,source_name,varargin)

p = inputParser();
addRequired(p,'sim_file',@ischar);
addRequired(p,'source_name',@ischar);
addParameter(p,'matched','both',@(x) any(validatestring(x,{'matched','mismatched','both'})));
addParameter(p,'snr',0,@isnumeric);
addParameter(p,'config','',@ischar);
parse(p,sim_file,source_name,varargin{:});

%% Compute power
force = true;
params = [];
k = 1;

%% Matched
if isequal(p.Results.matched,'both') || isequal(p.Results.matched,'matched')
    switch p.Results.config
        case 'mult-paper'
            params(k).beamformer_configs = {...
                ...'rmv_epsilon_10',...
                'rmv_epsilon_20',...
                ...'rmv_epsilon_30',...
                ...'rmv_epsilon_40',...
                ...'rmv_epsilon_50',...
                'rmv_eig_pre_cov_0_epsilon_20',...
                'rmv_eig_pre_cov_1_epsilon_20',...
                'lcmv',...
                'lcmv_eig_cov_0',...
                'lcmv_eig_cov_1',...
                'lcmv_reg_eig'
                };
        case 'single-paper'
            params(k).beamformer_configs = {...
                ...'rmv_epsilon_10',...
                'rmv_epsilon_20',...
                ...'rmv_epsilon_30',...
                ...'rmv_epsilon_40',...
                ...'rmv_epsilon_50',...
                'rmv_eig_pre_cov_0_epsilon_20',...
                'lcmv',...
                'lcmv_eig_cov_0',...
                'lcmv_reg_eig'...
                };
        otherwise
            error('unknown config');
    end
    k = k+1;
end
    
%% Mismatched
if isequal(p.Results.matched,'both') || isequal(p.Results.matched,'mismatched')
    switch p.Results.config
        case 'mult-paper'
            params(k).beamformer_configs = {...
                'rmv_epsilon_100_3sphere',...
                'rmv_epsilon_150_3sphere',...
                'rmv_epsilon_175_3sphere',...
                'rmv_epsilon_200_3sphere',...
                'rmv_eig_pre_cov_0_epsilon_150_3sphere',...
                'rmv_eig_pre_cov_1_epsilon_150_3sphere',...
                'rmv_aniso_eig_pre_cov_1_3sphere',...
                'rmv_aniso_3sphere',...
                'lcmv_3sphere',...
                'lcmv_eig_cov_0_3sphere',...
                'lcmv_eig_cov_1_3sphere',...
                'lcmv_reg_eig_3sphere'
                };
        case 'single-paper'
            params(k).beamformer_configs = {...
                'rmv_epsilon_100_3sphere',...
                'rmv_epsilon_150_3sphere',...
                'rmv_epsilon_175_3sphere',...
                'rmv_epsilon_200_3sphere',...
                'rmv_eig_pre_cov_0_epsilon_150_3sphere',...
                'rmv_aniso_eig_pre_cov_0_3sphere',...
                'rmv_aniso_3sphere',...
                'lcmv_3sphere',...
                'lcmv_eig_cov_0_3sphere',...
                'lcmv_reg_eig_3sphere'};
        otherwise
            error('unknown config');
    end
    k = k+1;
end

%% Set vars
switch p.Results.config
    case 'mult-paper'
        source_args = {'source_idx',5440,'int_idx',13841};
        samples = [120,160];
    case 'single-paper'
        source_args = {'source_idx',5440};
        samples = 120;
    otherwise
        error('unknown config');
end

%% average power
for i=1:length(params)
    data_set = SimDataSetEEG(...
        sim_file,...
        source_name,...
        p.Results.snr,...
        'iter',1);
    
    plot_power_surface(...
        data_set,...
        params(i).beamformer_configs,...
        source_args{:},...
        'mode','average',...
        'force',force...
        );
end

%% instantaneous power
for j=1:length(samples)
    sample = samples(j);
    for i=1:length(params)
        data_set = SimDataSetEEG(...
            sim_file,...
            source_name,...
            p.Results.snr,...
            'iter',1);
        
        plot_power_surface(...
            data_set,...
            params(i).beamformer_configs,...
            source_args{:},...
            'mode','instant',...
            'sample',sample,...
            'force',force...
            );
    end
end

end